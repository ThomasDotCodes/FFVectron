#include "octane-oslintrin.h"
#include "ff-vectron.h"

shader OslGeometry(int FoldingNumber = 7, output _sdf c = _SDFDEF) {
  vec4 param_min = vec4(-0.8323, -0.694, -0.5045, 0.8067);
  vec4 param_max = vec4(0.8579, 1.0883, 0.8937, 0.9411);
  float k1, k2, rp2, rq2;
  float scale = 1.0;
  float orb = 1e4;
  vec3 p = toVec3(P);
  vec3 q = toVec3(P);

  for (int i = 0; i < FoldingNumber; i++) {
    p = 2.0 * clamp(p, param_min, param_max) - p;
    q = 2.0 * fract(0.5 * q + 0.5) - 1.0;
    rp2 = dot(p, p);
    rq2 = dot(q, q);
    k1 = max(param_min.w / rp2, 1.0);
    k2 = max(param_min.w / rq2, 1.0);
    p *= k1;
    q *= k2;
    scale *= k1;
  }
  float lxy = sqrt(p.x*p.x+p.y*p.y);
  c.dist = 0.5 * max(param_max.w - lxy, lxy * p.z / length(p)) / scale;
}
